 <Table>
                        <TableHead>
                            <TableRow>
                                {resultColumns.map((column) => {
                                    if (column.type === "actions") {
                                        return (
                                            <TableCell
                                                key={column.name}
                                                sx={{
                                                    minWidth: column.minWidth,
                                                    position: { xs: "static", sm: "sticky" },
                                                    right: 0,
                                                    backgroundColor: (theme) =>
                                                        theme.palette.background.paper,
                                                    backgroundImage: (theme) => "var(--Paper-overlay)",
                                                }}
                                            >
                                                {column.labelType === LABEL_TYPE.I18N
                                                    ? t(column.label)
                                                    : column.label}
                                            </TableCell>
                                        );
                                    }
                                    return (
                                        <TableCell
                                            key={column.name}
                                            sx={{ minWidth: column.minWidth }}
                                        >
                                            {column.labelType === LABEL_TYPE.I18N
                                                ? t(column.label)
                                                : column.label}
                                        </TableCell>
                                    );
                                })}
                            </TableRow>
                        </TableHead>
                        <TableBody>
                            {data.map((model, index) => (
                                <TableRow key={model.id}>
                                    {resultColumns.map((column) => {
                                        if (column.type === "index") {
                                            return (
                                                <TableCell key={column.name}>{index + 1}</TableCell>
                                            );
                                        }
                                        if (column.type === "text") {
                                            return (
                                                <TableCell key={column.name}>
                                                    {model[column.name]}
                                                </TableCell>
                                            );
                                        }
                                        if (column.type === "dict") {
                                            return (
                                                <TableCell key={column.name}>
                                                    <BaseDictTag
                                                        dictKey={column.dictKey || ""}
                                                        value={model[column.name]}
                                                    ></BaseDictTag>
                                                </TableCell>
                                            );
                                        }
                                        if (column.type === "actions") {
                                            return (
                                                <TableCell
                                                    key={column.name}
                                                    sx={{
                                                        position: { xs: "static", sm: "sticky" },
                                                        right: 0,
                                                        backgroundColor: (theme) =>
                                                            theme.palette.background.paper,
                                                        backgroundImage: (theme) => "var(--Paper-overlay)",
                                                    }}
                                                >
                                                    <Box sx={{ display: "flex", gap: 2 }}>
                                                        <Button
                                                            aria-hidden="false"
                                                            variant="outlined"
                                                            onClick={() => handleEdit(model.id)}
                                                        >
                                                            {t("pages.common.edit")}
                                                        </Button>
                                                        <Button
                                                            aria-hidden="false"
                                                            variant="outlined"
                                                            color="error"
                                                            onClick={() => handleDelete(model.id)}
                                                        >
                                                            {t("pages.common.delete")}
                                                        </Button>
                                                    </Box>
                                                </TableCell>
                                            );
                                        }
                                    })}
                                </TableRow>
                            ))}
                        </TableBody>
                    </Table> 



                <TableContainer>
